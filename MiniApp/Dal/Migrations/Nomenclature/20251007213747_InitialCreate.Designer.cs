// <auto-generated />
using System;
using AbstractTasksDal.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dal.Migrations.Nomenclature
{
    [DbContext(typeof(NomenclatureContext))]
    [Migration("20251007213747_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dal.Entities.NomenclatureEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "ID");

                    b.Property<decimal>("Diameter")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "Diameter");

                    b.Property<string>("FormOfLength")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "FormOfLength");

                    b.Property<string>("Gost")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Gost");

                    b.Property<string>("IDCat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "IDCat");

                    b.Property<string>("IDFunctionType")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "IDFunctionType");

                    b.Property<Guid>("IDType")
                        .HasColumnType("uuid");

                    b.Property<string>("IDTypeNew")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "IDTypeNew");

                    b.Property<decimal>("Koef")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "Koef");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Manufacturer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<decimal>("PipeWallThickness")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PipeWallThickness");

                    b.Property<string>("ProductionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductionType");

                    b.Property<decimal?>("ProfileSize2")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "ProfileSize2");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "Status");

                    b.Property<string>("SteelGrade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "SteelGrade");

                    b.HasKey("ID");

                    b.HasIndex("IDType");

                    b.ToTable("_nomenclatures");
                });

            modelBuilder.Entity("Dal.Entities.TypeEntity", b =>
                {
                    b.Property<Guid>("IDType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("IDParentType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDType");

                    b.ToTable("TypeEntity");
                });

            modelBuilder.Entity("Dal.Entities.NomenclatureEntity", b =>
                {
                    b.HasOne("Dal.Entities.TypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("IDType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
