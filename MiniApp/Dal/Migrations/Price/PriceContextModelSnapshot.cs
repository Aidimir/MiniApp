// <auto-generated />
using System;
using AbstractTasksDal.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dal.Migrations.Price
{
    [DbContext(typeof(PriceContext))]
    partial class PriceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dal.Entities.PriceEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "ID");

                    b.Property<Guid>("IDStock")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "IDStock");

                    b.Property<int>("NDS")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "NDS");

                    b.Property<decimal?>("PriceLimitM1")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceLimitM1");

                    b.Property<decimal?>("PriceLimitM2")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceLimitM2");

                    b.Property<decimal?>("PriceLimitT1")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceLimitT1");

                    b.Property<decimal?>("PriceLimitT2")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceLimitT2");

                    b.Property<decimal>("PriceM")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceM");

                    b.Property<decimal?>("PriceM1")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceM1");

                    b.Property<decimal?>("PriceM2")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceM2");

                    b.Property<decimal>("PriceT")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceT");

                    b.Property<decimal?>("PriceT1")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceT1");

                    b.Property<decimal?>("PriceT2")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "PriceT2");

                    b.HasKey("ID");

                    b.HasIndex("IDStock");

                    b.ToTable("_prices");
                });

            modelBuilder.Entity("Dal.Entities.StockEntity", b =>
                {
                    b.Property<Guid>("IDStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "IDStock");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Address");

                    b.Property<bool>("CardPayment")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "CardPayment");

                    b.Property<bool>("CashPayment")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "CashPayment");

                    b.Property<string>("ConsigneeCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "ConsigneeCode");

                    b.Property<Guid>("FIASId")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "FIASId");

                    b.Property<Guid>("IDDivision")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "IDDivision");

                    b.Property<string>("OwnerFullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "OwnerFullName");

                    b.Property<string>("OwnerInn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "OwnerInn");

                    b.Property<string>("OwnerKpp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "OwnerKpp");

                    b.Property<string>("OwnerShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "OwnerShortName");

                    b.Property<string>("RailwayStation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "RailwayStation");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Schedule");

                    b.Property<string>("Stock")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "Stock");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "StockName");

                    b.HasKey("IDStock");

                    b.ToTable("StockEntity");
                });

            modelBuilder.Entity("Dal.Entities.PriceEntity", b =>
                {
                    b.HasOne("Dal.Entities.StockEntity", "Stock")
                        .WithMany()
                        .HasForeignKey("IDStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
